<?xml version="1.0" encoding="UTF-8"?>
<!-- servlet-context.xml :
	 	서블릿 컨텍스트란 아래와 같다.
	 	1) 톰캣이 실행되며 생성된다.
	 	2) 하나의 서블릿이 서블릿 컨테이너와 통신하기 위해 사용되는 메서드들을 가지고 있는 클래스.
	 	3) 하나의 웹 애플리케이션 내 하나의 컨텍스트가 존재하는데, 모든 서블릿들을 관리하는 역할을 한다.
	 	4) 쉽게 말하면, 웹 애플리케이션의 등록 정보라고 한다.
	 	5) 필터와 리스터 또한 등록하여 통신 간에 활용할 수 있다.
	 		- 리스너는 서블릿 리스너, 세션 리스너 등 EventListner 구현체를 등록할 수 있다.
	 		- 필터는 characterEncoding 등 Filter 구현체를 등록할 수 있다.
-->

<!-- beans : 
		빈즈란 아래와 같다.
		1) Spring에서 POJO(plain, old java object)를 'beans'라 부른다.
		2) 애플리케이션의 핵심을 이루는 객체이며, Spring IoC 컨테이너에 의하여 인스턴스화 관리된다.
		3) 우리가 컨테이너에 공급하는 설정 메타 데이터(XML)에 의해서 생성된다.
		4) 애플리케이션 객체가 지정되면 getBean()으로 가져올 수 있다.
-->


<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
	</beans:bean>
	
	<!-- Tiles 설정 -->
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
		<beans:property name="order" value="1"/>
	</beans:bean>
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/spring/tiles-define.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<context:component-scan base-package="com.teambosu.bosumap" />
	
	
	
</beans:beans>
